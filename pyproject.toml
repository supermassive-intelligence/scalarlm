[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "scalarlm"
dynamic = ["version"]
description = "ScalarLM: Advanced Large Language Model Training and Inference Platform"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "ScalarLM Team"},
]
keywords = ["llm", "large language model", "training", "inference", "tokenformer", "vllm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.40.0,<4.50.0",
    "peft",
    "psutil",
    "typing_extensions>=4.10",
    "msgspec",
    "pydantic>=2.9",
    "sentencepiece",
    "aiohttp",
    "fastapi>=0.107.0",
    "uvicorn[standard]",
    "cloudpickle",
    "prometheus_client>=0.18.0",
    "einops",
    "protobuf",
    "numpy<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio",
    "black",
    "flake8", 
    "mypy",
    "pre-commit",
    "ruff",
]
training = [
    "datasets",
    "accelerate",
    "tensorboard",
    "wandb",
]
inference = [
    "fastapi-utils",
    "typing-inspect",
    "pyzmq",
    "partial-json-parser",
    "prometheus-fastapi-instrumentator>=7.0.0",
]
tokenformer = [
    "safetensors",
]
all = [
    "pytest>=6.0",
    "pytest-asyncio", 
    "black",
    "flake8",
    "mypy",
    "pre-commit",
    "ruff",
    "datasets",
    "accelerate",
    "tensorboard",
    "wandb",
    "fastapi-utils",
    "typing-inspect", 
    "pyzmq",
    "partial-json-parser",
    "prometheus-fastapi-instrumentator>=7.0.0",
    "safetensors",
]

[project.scripts]
scalarlm = "scalarlm.cli:main"
scalarlm-server = "scalarlm.server:main" 
scalarlm-train = "scalarlm.training:main"

[project.urls]
Homepage = "https://github.com/scalarlm/scalarlm"
Documentation = "https://scalarlm.readthedocs.io/"
Repository = "https://github.com/scalarlm/scalarlm"
Issues = "https://github.com/scalarlm/scalarlm/issues"

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"
local_scheme = "no-local-version"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # use `raise ... from err`
    "B017",  # use pytest.raises()
]
line-length = 100
target-version = "py38"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_health.py", "vllm_health.py", "sanity.py", "get_latest_model.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --ignore=test/legacy --ignore=test/collectives --ignore=test/benchmark --ignore=test/deployment --ignore=test/ml"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true